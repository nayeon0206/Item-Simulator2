// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Users {
  userid    Int      @id @default(autoincrement()) @map("userid")
  email     String   @unique @map("email")
  password  String   @map("password")
  createdAt DateTime @default(now()) @map("createdAt") // 생성 시간
  updatedAt DateTime @updatedAt @map("updatedAt") // 수정 시간

  characters Charcter[] // Users와 Character의 1:N 관계 한 사용자가 여러 캐릭터를 가질 수 있음

   @@map("Users")
}

model Charcter {
  charcterid Int    @id @default(autoincrement()) @map("charcterid")
  charctername       String @map("charctername")
  health     Int    @default(500) @map("health") // 캐릭터 스텟: 체력
  power      Int    @default(100) @map("power") // 캐릭터 스텟: 힘
  money      Int    @default(10000) @map("money") // 기본 지급 머니
  userid     Int    @map("userid") //Users 모델의 외래 키
  User       Users  @relation(fields: [userid], references: [userid]) //Users 모델과의 관계
}

model Item {
  itemid       Int      @id @default(autoincrement())@map("itemid")
  code     String   @unique @map("code") // 아이템 코드 (고유값)
  itemname     String  @map("itemname") // 아이템 이름
  ability  Json   @map("ability")  // JSON 포맷의 아이템 능력
  price    Int    @map("price")  // 아이템 가격
  createdAt DateTime @default(now()) @map("createdAt") //생성 시간
  updatedAt DateTime @updatedAt @map("updatedAt") // 수정 시간
}